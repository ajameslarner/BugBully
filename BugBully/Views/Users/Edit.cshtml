@model BugBully.Models.Users

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>User</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, "New Password", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="password" class="form-control" id="Password" name="Password" />
            <input type="checkbox" onclick="showPassword()" id="showPasswordCheckbox"> Show Password
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>
    <script>
      function showPassword() {
        var password = document.getElementById("Password");
        var showPasswordCheckbox = document.getElementById("showPasswordCheckbox");

        if (showPasswordCheckbox.checked) {
          password.type = "text";
        } else {
          password.type = "password";
        }
      }
    </script>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index", "", htmlAttributes: new { @class = "btn btn-default" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}